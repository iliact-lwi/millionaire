{"version":3,"sources":["reportWebVitals.ts","components/universal/ButtonComponent.tsx","components/startgame/greeting/index.tsx","pages/StartGamePage.tsx","components/gameover/score/index.tsx","pages/GameOverPage.tsx","components/game/menu/index.tsx","components/game/question/index.tsx","store/types.ts","store/actions/index.ts","components/game/answers/answer.tsx","components/game/answers/index.tsx","components/game/menu/prize.tsx","components/game/menu/menu.tsx","pages/GamePage.tsx","App.tsx","store/reducers/configReducer.ts","store/reducers/actionReducer.ts","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ButtonComponent","onClick","text","className","GreetingComponent","history","useHistory","width","height","viewBox","fill","xmlns","d","push","StartGamePage","ScoreComponent","prize","useSelector","state","config","currentPrize","GameOverPage","MenuIconComponent","QuestionComponent","question","current","GAME_INIT_MATCH","GAME_NEXT_MATCH","GAME_SET_PRIZE","ACTION_GAME_EXPECTATION","gameSetPrize","action","type","actionGameExpectation","AnswerComponent","answer","id","actionSwitch","join","data-answer","data-id","String","letterSwitch","AnswersComponent","dispatch","useDispatch","expectation","matches","useState","setAction","event","element","target","closest","Number","dataset","setTimeout","_correct","length","gameNextMatch","answers","map","PrizeComponent","MenuComponent","mobile","match","GamePage","isMobile","setIsMobile","showMenu","setShowMenu","useEffect","window","innerWidth","resizeHandler","addEventListener","removeEventListener","closeMenuHandler","App","component","path","exact","initialState","data","configReducer","copy","JSON","parse","stringify","reverse","item","actionReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","WithProvider","StrictMode","millionaire","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.08fbe151.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\ntype propsType = {\r\n    onClick: () => void;\r\n    text: string;\r\n}\r\n\r\nconst ButtonComponent: React.FunctionComponent<propsType> = ({ onClick, text }) => {\r\n    return (\r\n            <button onClick={ onClick } className=\"universal-button\">\r\n                { text }\r\n            </button>\r\n    )\r\n}\r\n\r\nexport default ButtonComponent;","import React from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ButtonComponent from '../../../components/universal/ButtonComponent';\r\n\r\nconst GreetingComponent: React.FunctionComponent = () => {\r\n    const history = useHistory();\r\n\r\n    const startGameHandler = () => {\r\n        history.push('/game');\r\n    }\r\n\r\n    return (\r\n        <div className=\"greeting\">\r\n            <div className=\"hand\">\r\n                <svg className=\"hand-svg\" width=\"198\" height=\"156\" viewBox=\"0 0 198 156\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M151.954 89.9477C154.834 79.6233 157.138 69.1386 158.866 58.5578C160.626 54.5499 162.61 50.6381 164.786 46.8547C167.474 42.2055 170.641 37.909 173.585 33.4202C176.209 29.4123 178.577 24.9876 178.865 20.146C179.089 16.3626 178.257 12.2905 175.729 9.34071C172.945 6.07026 168.658 4.78773 164.466 5.17249C159.922 5.55725 155.794 7.96199 152.274 10.7515C148.466 13.7975 144.914 17.2603 141.555 20.7552C135.059 27.5206 129.299 34.9913 124.339 42.943C120.691 41.5322 117.171 39.8328 113.652 38.1656C108.532 35.7287 103.348 33.5805 97.8442 32.1377C88.0205 29.5726 76.949 28.5786 67.3173 32.3621C58.6137 35.7929 51.2859 43.6163 51.1579 53.3635C51.0939 57.2111 52.2139 60.5777 54.0698 63.5276C50.102 65.7079 46.7421 68.818 44.6622 72.9221C42.5503 77.0903 42.1343 82.1884 43.8622 86.549C44.5022 88.1521 45.3982 89.595 46.4861 90.8775C43.2542 93.8273 40.3423 97.5787 38.9984 101.779C37.7184 105.755 38.4544 109.763 40.5663 113.322C41.1743 114.316 41.8783 115.246 42.6463 116.143C39.0944 119.253 37.9424 124.352 38.9984 128.904C40.2144 134.259 44.1182 138.427 48.3101 141.73C51.5419 144.263 54.9978 146.539 58.5817 148.559C60.3736 149.681 62.2615 150.74 64.1495 151.701C66.1654 152.695 68.2773 153.625 70.4212 154.266C71.8932 154.715 73.3971 155.1 74.9011 155.293C75.925 155.421 76.949 155.485 77.9729 155.453C78.4849 155.453 78.9969 155.421 79.4769 155.357C80.8848 155.228 82.2928 154.844 83.6687 154.395C84.6287 154.074 85.5566 153.657 86.4526 153.144C87.1566 152.76 87.8606 152.343 88.5005 151.894C92.5324 152.856 96.6282 153.401 100.788 153.337C109.652 153.176 117.971 149.585 124.691 143.846C132.083 137.562 137.299 129.193 141.267 120.408C145.714 110.661 149.042 100.304 151.954 89.9477Z\" fill=\"#EF9E81\"/>\r\n                    <path d=\"M43.1515 117.176C49.2771 121.125 55.6273 124.754 62.1378 127.997C65.345 129.603 68.6163 131.144 71.9517 132.493C75.2551 133.842 78.6547 134.998 82.1826 135.704C85.4539 136.346 89.0138 136.668 92.3172 136.025C94.3698 135.64 96.5827 135.126 98.3466 133.97C99.405 133.296 100.303 132.429 101.137 131.498C101.875 130.663 102.644 129.763 103.189 128.8C104.055 127.227 104.536 125.461 104.729 123.694C105.274 119.231 103.831 114.607 100.239 111.781C99.7257 111.363 99.1484 110.978 98.5711 110.657C98.1221 110.4 97.7373 111.074 98.1542 111.363C100.239 112.584 101.907 114.318 102.933 116.533C103.799 118.396 104.12 120.515 104.023 122.57C103.927 124.337 103.574 126.103 102.837 127.708C102.516 128.415 102.099 129.057 101.618 129.667C100.752 130.791 99.7899 131.851 98.6994 132.75C97.16 134.002 95.2678 134.548 93.3755 134.998C90.2325 135.768 86.9291 135.672 83.7541 135.19C76.8908 134.131 70.4444 131.176 64.2546 128.158C57.9044 125.075 51.7146 121.639 45.7493 117.882C45.0116 117.433 44.306 116.951 43.5684 116.501C43.1194 116.212 42.7025 116.919 43.1515 117.176Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M49.1168 92.0644C56.2688 95.4361 63.4849 98.7115 70.701 101.858C77.6284 104.909 84.62 107.96 91.9324 109.983C95.4602 110.978 99.2447 111.909 102.933 111.267C105.659 110.786 108.161 109.405 110.085 107.446C112.041 105.455 113.452 102.886 114.03 100.124C114.382 98.5189 114.254 96.8491 113.966 95.2435C113.1 90.5873 110.277 86.3806 106.172 84.0365C105.563 83.6833 104.921 83.3943 104.248 83.1052C103.767 82.9126 103.574 83.6833 104.023 83.8759C108.481 85.7384 111.688 89.5918 112.907 94.2159C113.324 95.8215 113.549 97.5234 113.356 99.1611C113.1 101.537 111.913 103.946 110.438 105.808C108.738 107.895 106.461 109.469 103.863 110.208C100.431 111.139 96.8393 110.432 93.4718 109.533C86.384 107.703 79.6169 104.845 72.9139 101.923C65.9223 98.8721 58.9949 95.7573 52.0674 92.5461C51.2015 92.1286 50.3355 91.7433 49.4696 91.3258C49.0527 91.1653 48.6678 91.8717 49.1168 92.0644Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M56.6536 64.8657C64.7677 68.2374 72.6252 72.1872 80.6111 75.7516C84.5559 77.5177 88.5648 79.1875 92.6379 80.6647C96.7751 82.1739 101.073 83.6511 105.467 84.1327C109.283 84.5823 113.356 84.0685 116.595 81.8207C118.071 80.7931 119.321 79.4444 120.123 77.8388C120.957 76.2012 121.342 74.3387 121.31 72.5083C121.31 68.7191 119.61 65.2189 117.109 62.4252C114.382 59.3746 110.79 57.2552 107.07 55.6175C103.895 54.2046 100.624 53.0486 97.3845 51.7963C94.2094 50.576 91.0985 49.2915 88.0196 47.8786C87.0254 47.4291 86.0312 46.9795 85.0369 46.4978C84.5879 46.273 84.171 46.9795 84.62 47.2043C87.9555 48.7456 91.323 50.2228 94.7226 51.6036C97.5769 52.7275 100.431 53.8193 103.286 54.9111C107.102 56.3882 110.919 58.0902 114.126 60.6912C116.948 63.0032 119.354 66.086 120.187 69.6825C121.021 73.2148 120.284 77.1966 117.686 79.8298C115.088 82.4629 111.271 83.4905 107.647 83.4263C103.286 83.3621 98.9881 81.9491 94.915 80.5683C90.8419 79.1875 86.865 77.582 82.9523 75.88C75.1268 72.4762 67.4938 68.6228 59.6363 65.2511C58.7062 64.8336 57.744 64.4483 56.814 64.0629C56.397 63.8703 56.1725 64.673 56.6536 64.8657Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M89.1742 150.315C90.3609 147.874 90.842 145.081 90.5212 142.383C90.3609 141.067 90.0402 139.75 89.527 138.498C89.078 137.406 88.5007 135.961 87.282 135.576C86.8009 135.415 86.5764 136.186 87.0575 136.346C87.6027 136.507 87.9235 137.053 88.18 137.534C88.4687 138.08 88.7252 138.626 88.9497 139.204C89.3667 140.36 89.6553 141.548 89.7515 142.769C89.976 145.209 89.527 147.682 88.4687 149.897C88.2442 150.379 88.9497 150.797 89.1742 150.315Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M102.259 77.9672C102.42 73.022 104.568 68.2374 108.128 64.8336C108.513 64.4803 107.936 63.9023 107.551 64.2555C103.831 67.82 101.618 72.7973 101.425 77.9351C101.458 78.481 102.259 78.481 102.259 77.9672Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M106.878 65.9254C108.674 66.4392 110.47 67.0493 112.105 67.9805C113.42 68.7191 114.639 69.8109 114.896 71.3844C115.152 72.9257 114.447 74.4992 113.324 75.5268C112.137 76.6507 110.47 77.1645 108.866 77.2929C106.653 77.4535 104.472 76.8434 102.356 76.2332C101.875 76.1048 101.65 76.8755 102.131 77.0039C105.851 78.0957 110.309 79.027 113.613 76.3296C114.896 75.2699 115.762 73.6322 115.729 71.9303C115.729 70.1641 114.703 68.7512 113.324 67.7879C112.49 67.2099 111.56 66.7603 110.63 66.3749C109.476 65.8933 108.289 65.4758 107.07 65.1226C106.589 64.9941 106.397 65.7648 106.878 65.9254Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M92.4775 103.464C92.6379 98.1655 94.9471 93.0597 98.7636 89.399C99.1484 89.0458 98.5711 88.4678 98.1863 88.821C94.2094 92.6102 91.8361 97.9407 91.6437 103.464C91.6437 103.978 92.4455 103.978 92.4775 103.464Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M97.4486 90.5549C99.3409 91.1008 101.265 91.7751 102.997 92.7385C104.44 93.5413 105.787 94.7294 106.044 96.4634C106.268 98.1011 105.531 99.771 104.344 100.863C103.029 102.083 101.233 102.629 99.5012 102.757C97.1279 102.918 94.8188 102.276 92.5738 101.633C92.0927 101.505 91.8682 102.276 92.3493 102.404C96.262 103.56 101.009 104.556 104.504 101.762C105.916 100.638 106.846 98.8718 106.846 97.0414C106.846 95.1469 105.723 93.6376 104.248 92.5779C103.35 91.9357 102.356 91.4861 101.361 91.0687C100.143 90.5549 98.8919 90.1053 97.6411 89.7521C97.16 89.6237 96.9355 90.3943 97.4486 90.5549Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M83.8182 129.314C83.9786 124.015 86.2878 118.91 90.1043 115.249C90.4891 114.896 89.9118 114.318 89.527 114.671C85.5501 118.46 83.1768 123.791 82.9844 129.314C82.9844 129.828 83.7862 129.828 83.8182 129.314Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M88.7894 116.373C90.6816 116.919 92.6059 117.593 94.3378 118.556C95.781 119.359 97.128 120.547 97.3846 122.281C97.6091 123.919 96.8714 125.589 95.6848 126.681C94.3699 127.901 92.5738 128.447 90.842 128.575C88.4687 128.736 86.1595 128.094 83.9145 127.451C83.4334 127.323 83.209 128.094 83.69 128.222C87.6028 129.378 92.3493 130.374 95.8451 127.58C97.2563 126.456 98.1864 124.69 98.1864 122.859C98.1864 120.965 97.0639 119.456 95.5886 118.396C94.6906 117.754 93.6963 117.304 92.7021 116.887C91.4834 116.373 90.2326 115.923 88.9818 115.57C88.5008 115.442 88.2763 116.244 88.7894 116.373Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M73.5232 148.806C73.6515 144.824 75.3834 140.97 78.2698 138.209C78.6547 137.856 78.0774 137.278 77.6925 137.631C74.6457 140.521 72.8497 144.599 72.7214 148.774C72.7214 149.32 73.5232 149.32 73.5232 148.806Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M77.1794 139.108C78.5906 139.525 80.0338 140.007 81.3167 140.746C82.375 141.356 83.4013 142.223 83.5938 143.507C83.7862 144.727 83.2089 146.012 82.3109 146.815C81.3167 147.714 79.9697 148.099 78.6868 148.196C76.9229 148.292 75.2231 147.842 73.5233 147.329C73.0422 147.2 72.8177 147.971 73.2988 148.099C76.3135 148.966 79.9376 149.737 82.5995 147.585C83.69 146.718 84.3955 145.37 84.3955 143.957C84.3955 142.512 83.5617 141.324 82.4071 140.489C80.9318 139.429 79.0717 138.819 77.3398 138.337C76.8908 138.177 76.6984 138.947 77.1794 139.108Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M174.773 114.51L172.111 105.358L169.642 114.51L160.79 117.432L169.642 120.419L172.111 130.341L174.901 120.483L183.432 117.432L174.773 114.51Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M27.4684 44.0895L24.8706 35.1303L22.4331 44.0574L13.7738 46.9474L22.4331 49.8375L24.8706 59.5673L27.5967 49.9017L35.9673 46.9474L27.4684 44.0895Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M192.028 90.9723L190.424 85.4491L188.917 90.9723L183.593 92.7063L188.917 94.5046L190.424 100.509L192.092 94.5688L197.255 92.7063L192.028 90.9723Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M8.67449 73.7926L7.10298 68.3978L5.62769 73.7926L0.400024 75.5266L5.62769 77.2607L7.10298 83.1371L8.73863 77.2928L13.7739 75.5266L8.67449 73.7926Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M109.957 4.46353L108.674 0L107.455 4.46353L103.157 5.87644L107.455 7.32147L108.674 12.1703L110.021 7.35358L114.19 5.87644L109.957 4.46353Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M26.1535 142.255L24.8706 137.791L23.6519 142.255L19.3543 143.7L23.6519 145.145L24.8706 149.962L26.2176 145.177L30.3869 143.7L26.1535 142.255Z\" fill=\"#FFD62A\"/>\r\n                </svg>\r\n            </div>\r\n            <div>\r\n                <div className=\"title\">\r\n                    Who wants to be a millionaire?\r\n                </div>\r\n                <div className=\"button\">\r\n                    <ButtonComponent onClick={ startGameHandler } text={ 'Start' }/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GreetingComponent;","import React from 'react';\r\n\r\nimport GreetingComponent from '../components/startgame/greeting';\r\n\r\nconst StartGamePage: React.FunctionComponent = () => {\r\n    return (\r\n        <main className=\"startgame\">\r\n            <GreetingComponent />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default StartGamePage;","import React from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { rootStateType } from '../../../store/actions';\r\n\r\nimport ButtonComponent from '../../../components/universal/ButtonComponent';\r\n \r\nconst ScoreComponent: React.FunctionComponent = () => {\r\n    const history = useHistory();\r\n    const prize = useSelector((state: rootStateType) => state.config.currentPrize);\r\n\r\n    const startGameHandler = () => {\r\n        history.push('/game');\r\n    }\r\n\r\n    return (\r\n        <div className=\"score\">\r\n            <div className=\"hand\">\r\n                <svg className=\"hand-svg\" width=\"198\" height=\"156\" viewBox=\"0 0 198 156\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M151.954 89.9477C154.834 79.6233 157.138 69.1386 158.866 58.5578C160.626 54.5499 162.61 50.6381 164.786 46.8547C167.474 42.2055 170.641 37.909 173.585 33.4202C176.209 29.4123 178.577 24.9876 178.865 20.146C179.089 16.3626 178.257 12.2905 175.729 9.34071C172.945 6.07026 168.658 4.78773 164.466 5.17249C159.922 5.55725 155.794 7.96199 152.274 10.7515C148.466 13.7975 144.914 17.2603 141.555 20.7552C135.059 27.5206 129.299 34.9913 124.339 42.943C120.691 41.5322 117.171 39.8328 113.652 38.1656C108.532 35.7287 103.348 33.5805 97.8442 32.1377C88.0205 29.5726 76.949 28.5786 67.3173 32.3621C58.6137 35.7929 51.2859 43.6163 51.1579 53.3635C51.0939 57.2111 52.2139 60.5777 54.0698 63.5276C50.102 65.7079 46.7421 68.818 44.6622 72.9221C42.5503 77.0903 42.1343 82.1884 43.8622 86.549C44.5022 88.1521 45.3982 89.595 46.4861 90.8775C43.2542 93.8273 40.3423 97.5787 38.9984 101.779C37.7184 105.755 38.4544 109.763 40.5663 113.322C41.1743 114.316 41.8783 115.246 42.6463 116.143C39.0944 119.253 37.9424 124.352 38.9984 128.904C40.2144 134.259 44.1182 138.427 48.3101 141.73C51.5419 144.263 54.9978 146.539 58.5817 148.559C60.3736 149.681 62.2615 150.74 64.1495 151.701C66.1654 152.695 68.2773 153.625 70.4212 154.266C71.8932 154.715 73.3971 155.1 74.9011 155.293C75.925 155.421 76.949 155.485 77.9729 155.453C78.4849 155.453 78.9969 155.421 79.4769 155.357C80.8848 155.228 82.2928 154.844 83.6687 154.395C84.6287 154.074 85.5566 153.657 86.4526 153.144C87.1566 152.76 87.8606 152.343 88.5005 151.894C92.5324 152.856 96.6282 153.401 100.788 153.337C109.652 153.176 117.971 149.585 124.691 143.846C132.083 137.562 137.299 129.193 141.267 120.408C145.714 110.661 149.042 100.304 151.954 89.9477Z\" fill=\"#EF9E81\"/>\r\n                    <path d=\"M43.1515 117.176C49.2771 121.125 55.6273 124.754 62.1378 127.997C65.345 129.603 68.6163 131.144 71.9517 132.493C75.2551 133.842 78.6547 134.998 82.1826 135.704C85.4539 136.346 89.0138 136.668 92.3172 136.025C94.3698 135.64 96.5827 135.126 98.3466 133.97C99.405 133.296 100.303 132.429 101.137 131.498C101.875 130.663 102.644 129.763 103.189 128.8C104.055 127.227 104.536 125.461 104.729 123.694C105.274 119.231 103.831 114.607 100.239 111.781C99.7257 111.363 99.1484 110.978 98.5711 110.657C98.1221 110.4 97.7373 111.074 98.1542 111.363C100.239 112.584 101.907 114.318 102.933 116.533C103.799 118.396 104.12 120.515 104.023 122.57C103.927 124.337 103.574 126.103 102.837 127.708C102.516 128.415 102.099 129.057 101.618 129.667C100.752 130.791 99.7899 131.851 98.6994 132.75C97.16 134.002 95.2678 134.548 93.3755 134.998C90.2325 135.768 86.9291 135.672 83.7541 135.19C76.8908 134.131 70.4444 131.176 64.2546 128.158C57.9044 125.075 51.7146 121.639 45.7493 117.882C45.0116 117.433 44.306 116.951 43.5684 116.501C43.1194 116.212 42.7025 116.919 43.1515 117.176Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M49.1168 92.0644C56.2688 95.4361 63.4849 98.7115 70.701 101.858C77.6284 104.909 84.62 107.96 91.9324 109.983C95.4602 110.978 99.2447 111.909 102.933 111.267C105.659 110.786 108.161 109.405 110.085 107.446C112.041 105.455 113.452 102.886 114.03 100.124C114.382 98.5189 114.254 96.8491 113.966 95.2435C113.1 90.5873 110.277 86.3806 106.172 84.0365C105.563 83.6833 104.921 83.3943 104.248 83.1052C103.767 82.9126 103.574 83.6833 104.023 83.8759C108.481 85.7384 111.688 89.5918 112.907 94.2159C113.324 95.8215 113.549 97.5234 113.356 99.1611C113.1 101.537 111.913 103.946 110.438 105.808C108.738 107.895 106.461 109.469 103.863 110.208C100.431 111.139 96.8393 110.432 93.4718 109.533C86.384 107.703 79.6169 104.845 72.9139 101.923C65.9223 98.8721 58.9949 95.7573 52.0674 92.5461C51.2015 92.1286 50.3355 91.7433 49.4696 91.3258C49.0527 91.1653 48.6678 91.8717 49.1168 92.0644Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M56.6536 64.8657C64.7677 68.2374 72.6252 72.1872 80.6111 75.7516C84.5559 77.5177 88.5648 79.1875 92.6379 80.6647C96.7751 82.1739 101.073 83.6511 105.467 84.1327C109.283 84.5823 113.356 84.0685 116.595 81.8207C118.071 80.7931 119.321 79.4444 120.123 77.8388C120.957 76.2012 121.342 74.3387 121.31 72.5083C121.31 68.7191 119.61 65.2189 117.109 62.4252C114.382 59.3746 110.79 57.2552 107.07 55.6175C103.895 54.2046 100.624 53.0486 97.3845 51.7963C94.2094 50.576 91.0985 49.2915 88.0196 47.8786C87.0254 47.4291 86.0312 46.9795 85.0369 46.4978C84.5879 46.273 84.171 46.9795 84.62 47.2043C87.9555 48.7456 91.323 50.2228 94.7226 51.6036C97.5769 52.7275 100.431 53.8193 103.286 54.9111C107.102 56.3882 110.919 58.0902 114.126 60.6912C116.948 63.0032 119.354 66.086 120.187 69.6825C121.021 73.2148 120.284 77.1966 117.686 79.8298C115.088 82.4629 111.271 83.4905 107.647 83.4263C103.286 83.3621 98.9881 81.9491 94.915 80.5683C90.8419 79.1875 86.865 77.582 82.9523 75.88C75.1268 72.4762 67.4938 68.6228 59.6363 65.2511C58.7062 64.8336 57.744 64.4483 56.814 64.0629C56.397 63.8703 56.1725 64.673 56.6536 64.8657Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M89.1742 150.315C90.3609 147.874 90.842 145.081 90.5212 142.383C90.3609 141.067 90.0402 139.75 89.527 138.498C89.078 137.406 88.5007 135.961 87.282 135.576C86.8009 135.415 86.5764 136.186 87.0575 136.346C87.6027 136.507 87.9235 137.053 88.18 137.534C88.4687 138.08 88.7252 138.626 88.9497 139.204C89.3667 140.36 89.6553 141.548 89.7515 142.769C89.976 145.209 89.527 147.682 88.4687 149.897C88.2442 150.379 88.9497 150.797 89.1742 150.315Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M102.259 77.9672C102.42 73.022 104.568 68.2374 108.128 64.8336C108.513 64.4803 107.936 63.9023 107.551 64.2555C103.831 67.82 101.618 72.7973 101.425 77.9351C101.458 78.481 102.259 78.481 102.259 77.9672Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M106.878 65.9254C108.674 66.4392 110.47 67.0493 112.105 67.9805C113.42 68.7191 114.639 69.8109 114.896 71.3844C115.152 72.9257 114.447 74.4992 113.324 75.5268C112.137 76.6507 110.47 77.1645 108.866 77.2929C106.653 77.4535 104.472 76.8434 102.356 76.2332C101.875 76.1048 101.65 76.8755 102.131 77.0039C105.851 78.0957 110.309 79.027 113.613 76.3296C114.896 75.2699 115.762 73.6322 115.729 71.9303C115.729 70.1641 114.703 68.7512 113.324 67.7879C112.49 67.2099 111.56 66.7603 110.63 66.3749C109.476 65.8933 108.289 65.4758 107.07 65.1226C106.589 64.9941 106.397 65.7648 106.878 65.9254Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M92.4775 103.464C92.6379 98.1655 94.9471 93.0597 98.7636 89.399C99.1484 89.0458 98.5711 88.4678 98.1863 88.821C94.2094 92.6102 91.8361 97.9407 91.6437 103.464C91.6437 103.978 92.4455 103.978 92.4775 103.464Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M97.4486 90.5549C99.3409 91.1008 101.265 91.7751 102.997 92.7385C104.44 93.5413 105.787 94.7294 106.044 96.4634C106.268 98.1011 105.531 99.771 104.344 100.863C103.029 102.083 101.233 102.629 99.5012 102.757C97.1279 102.918 94.8188 102.276 92.5738 101.633C92.0927 101.505 91.8682 102.276 92.3493 102.404C96.262 103.56 101.009 104.556 104.504 101.762C105.916 100.638 106.846 98.8718 106.846 97.0414C106.846 95.1469 105.723 93.6376 104.248 92.5779C103.35 91.9357 102.356 91.4861 101.361 91.0687C100.143 90.5549 98.8919 90.1053 97.6411 89.7521C97.16 89.6237 96.9355 90.3943 97.4486 90.5549Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M83.8182 129.314C83.9786 124.015 86.2878 118.91 90.1043 115.249C90.4891 114.896 89.9118 114.318 89.527 114.671C85.5501 118.46 83.1768 123.791 82.9844 129.314C82.9844 129.828 83.7862 129.828 83.8182 129.314Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M88.7894 116.373C90.6816 116.919 92.6059 117.593 94.3378 118.556C95.781 119.359 97.128 120.547 97.3846 122.281C97.6091 123.919 96.8714 125.589 95.6848 126.681C94.3699 127.901 92.5738 128.447 90.842 128.575C88.4687 128.736 86.1595 128.094 83.9145 127.451C83.4334 127.323 83.209 128.094 83.69 128.222C87.6028 129.378 92.3493 130.374 95.8451 127.58C97.2563 126.456 98.1864 124.69 98.1864 122.859C98.1864 120.965 97.0639 119.456 95.5886 118.396C94.6906 117.754 93.6963 117.304 92.7021 116.887C91.4834 116.373 90.2326 115.923 88.9818 115.57C88.5008 115.442 88.2763 116.244 88.7894 116.373Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M73.5232 148.806C73.6515 144.824 75.3834 140.97 78.2698 138.209C78.6547 137.856 78.0774 137.278 77.6925 137.631C74.6457 140.521 72.8497 144.599 72.7214 148.774C72.7214 149.32 73.5232 149.32 73.5232 148.806Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M77.1794 139.108C78.5906 139.525 80.0338 140.007 81.3167 140.746C82.375 141.356 83.4013 142.223 83.5938 143.507C83.7862 144.727 83.2089 146.012 82.3109 146.815C81.3167 147.714 79.9697 148.099 78.6868 148.196C76.9229 148.292 75.2231 147.842 73.5233 147.329C73.0422 147.2 72.8177 147.971 73.2988 148.099C76.3135 148.966 79.9376 149.737 82.5995 147.585C83.69 146.718 84.3955 145.37 84.3955 143.957C84.3955 142.512 83.5617 141.324 82.4071 140.489C80.9318 139.429 79.0717 138.819 77.3398 138.337C76.8908 138.177 76.6984 138.947 77.1794 139.108Z\" fill=\"#C4674E\"/>\r\n                    <path d=\"M174.773 114.51L172.111 105.358L169.642 114.51L160.79 117.432L169.642 120.419L172.111 130.341L174.901 120.483L183.432 117.432L174.773 114.51Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M27.4684 44.0895L24.8706 35.1303L22.4331 44.0574L13.7738 46.9474L22.4331 49.8375L24.8706 59.5673L27.5967 49.9017L35.9673 46.9474L27.4684 44.0895Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M192.028 90.9723L190.424 85.4491L188.917 90.9723L183.593 92.7063L188.917 94.5046L190.424 100.509L192.092 94.5688L197.255 92.7063L192.028 90.9723Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M8.67449 73.7926L7.10298 68.3978L5.62769 73.7926L0.400024 75.5266L5.62769 77.2607L7.10298 83.1371L8.73863 77.2928L13.7739 75.5266L8.67449 73.7926Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M109.957 4.46353L108.674 0L107.455 4.46353L103.157 5.87644L107.455 7.32147L108.674 12.1703L110.021 7.35358L114.19 5.87644L109.957 4.46353Z\" fill=\"#FFD62A\"/>\r\n                    <path d=\"M26.1535 142.255L24.8706 137.791L23.6519 142.255L19.3543 143.7L23.6519 145.145L24.8706 149.962L26.2176 145.177L30.3869 143.7L26.1535 142.255Z\" fill=\"#FFD62A\"/>\r\n                </svg>\r\n            </div>\r\n            <div>\r\n                <div className=\"title\">\r\n                    <div className=\"subtitle\">Total score:</div>\r\n                        { prize } earned\r\n                    </div> \r\n                    <div className=\"button\" >\r\n                        <ButtonComponent onClick={ startGameHandler } text={ 'Try again' } />\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreComponent;","import React from 'react';\r\n\r\nimport ScoreComponent from '../components/gameover/score';\r\n\r\nconst GameOverPage: React.FunctionComponent = () => {\r\n    return (\r\n        <main className=\"gameover\">\r\n            <ScoreComponent />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default GameOverPage;","import React from 'react';\r\n\r\ntype propsType = {\r\n    onClick: () => void;\r\n}\r\n\r\nconst MenuIconComponent: React.FunctionComponent<propsType> = ({ onClick }) => {\r\n    return (\r\n        <div className=\"menu-icon\">\r\n            <svg onClick={ onClick } className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M4 6C4 5.44772 4.44772 5 5 5H19C19.5523 5 20 5.44772 20 6C20 6.55228 19.5523 7 19 7H5C4.44772 7 4 6.55228 4 6Z\" fill=\"#1C1C21\"/>\r\n                <path d=\"M4 12C4 11.4477 4.44772 11 5 11H19C19.5523 11 20 11.4477 20 12C20 12.5523 19.5523 13 19 13H5C4.44772 13 4 12.5523 4 12Z\" fill=\"#1C1C21\"/>\r\n                <path d=\"M5 17C4.44772 17 4 17.4477 4 18C4 18.5523 4.44772 19 5 19H19C19.5523 19 20 18.5523 20 18C20 17.4477 19.5523 17 19 17H5Z\" fill=\"#1C1C21\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuIconComponent;","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { rootStateType } from '../../../store/actions';\r\n\r\nconst QuestionComponent: React.FunctionComponent = () => {\r\n    const question = useSelector((state: rootStateType) => state.config.current.question);\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            { question }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionComponent;","export const GAME_INIT_MATCH = 'GAME_INIT_MATCH';\r\nexport const GAME_NEXT_MATCH = 'GAME_NEXT_MATCH';\r\nexport const GAME_SET_PRIZE = 'GAME_SET_PRIZE';\r\n\r\nexport const ACTION_GAME_EXPECTATION = 'ACTION_GAME_EXPECTATION'; ","import { GAME_INIT_MATCH, ACTION_GAME_EXPECTATION, GAME_NEXT_MATCH, GAME_SET_PRIZE } from '../types';\r\n\r\nexport type rootStateType = {\r\n    config: configStateType;\r\n    action: actionStateType;\r\n}\r\n\r\ntype configAnswerType = {\r\n    answer: string;\r\n    truth: boolean;\r\n    id: number;\r\n}\r\n\r\nexport type configItemType = {\r\n    question: string;\r\n    answers: configAnswerType[];\r\n    prize: string;\r\n    _correct: string[];\r\n    id: number;\r\n}\r\n\r\ntype configDataType = {\r\n    type: string;\r\n    game: string;\r\n    ok: number;\r\n    data: configItemType[];\r\n}\r\n\r\nexport type configMatchesType = {\r\n    prize: string;\r\n    id: number;\r\n    action: string;\r\n    question: string;\r\n    answers: configAnswerType[];\r\n    _correct: string[];\r\n}\r\n\r\nexport type configStateType = {\r\n    data: configDataType;\r\n    current: configItemType;\r\n    matches: configMatchesType[];\r\n    currentPrize: string;\r\n}\r\n\r\nexport type actionStateType = {\r\n    expectation: boolean;\r\n}\r\n\r\ntype gameInitMatchActionType = {\r\n    type: typeof GAME_INIT_MATCH;\r\n}\r\n\r\ntype gameNextMatchActionType = {\r\n    type: typeof GAME_NEXT_MATCH;\r\n    id: number;\r\n}\r\n\r\ntype gameSetPrizeActionType = {\r\n    type: typeof GAME_SET_PRIZE;\r\n    action: string;\r\n}\r\n\r\ntype actionGameExpectationActionType = {\r\n    type: typeof ACTION_GAME_EXPECTATION;\r\n    action: boolean;\r\n}\r\n\r\nexport const gameInitMatch = (): gameInitMatchActionType => {\r\n    return {\r\n        type: GAME_INIT_MATCH\r\n    }\r\n}\r\n\r\nexport const gameNextMatch = (id: number): gameNextMatchActionType => {\r\n    return {\r\n        type: GAME_NEXT_MATCH,\r\n        id\r\n    }\r\n}\r\n\r\nexport const gameSetPrize = (action: string): gameSetPrizeActionType => {\r\n    return {\r\n        type: GAME_SET_PRIZE,\r\n        action\r\n    }\r\n}\r\n\r\nexport const actionGameExpectation = (action: boolean): actionGameExpectationActionType => {\r\n    return {\r\n        type: ACTION_GAME_EXPECTATION,\r\n        action\r\n    }\r\n}\r\n\r\n\r\nexport type ActionType = gameInitMatchActionType | actionGameExpectationActionType | gameNextMatchActionType | gameSetPrizeActionType;","import React from 'react';\r\n\r\ntype actionType = {\r\n    action: string;\r\n    id: number;\r\n}\r\n\r\ntype propsType = {\r\n    answer: string;\r\n    id: number;\r\n    action: actionType\r\n}\r\n\r\nconst AnswerComponent: React.FunctionComponent<propsType> = ({ answer, id, action}) => {\r\n    const letterSwitch = (id: number) => {\r\n        switch(id) {\r\n            case 1: return 'A';\r\n            case 2: return 'B';\r\n            case 3: return 'C';\r\n            case 4: return 'D';\r\n\r\n            default: return String(id);\r\n        }\r\n    }\r\n\r\n    const actionSwitch = (action: actionType) => {\r\n        switch(action.id) {\r\n            case 0: return 'inactive';\r\n            case id: return action.action;\r\n\r\n            default: return 'inactive';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"answer\">\r\n            <div className={ [\"main\", actionSwitch(action)].join(' ') } data-answer={ answer } data-id={ id }>\r\n                <svg className=\"answer-svg\" width=\"288\" height=\"56\" viewBox=\"0 0 288 56\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M16.8175 5.31576C18.9762 2.29361 22.4615 0.5 26.1754 0.5H261.825C265.539 0.5 269.024 2.29361 271.183 5.31576L287.386 28L271.183 50.6842C269.024 53.7064 265.539 55.5 261.825 55.5H26.1754C22.4615 55.5 18.9762 53.7064 16.8175 50.6842L0.614452 28L16.8175 5.31576Z\" />\r\n                </svg> \r\n                <div className=\"left-vector\">\r\n                    <svg width=\"17\" height=\"2\" viewBox=\"0 0 17 2\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M0 1L17 1\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"right-vector\">\r\n                    <svg width=\"17\" height=\"2\" viewBox=\"0 0 17 2\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M0 1L17 1\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <div className=\"answer-letter\">{ letterSwitch(id) }</div>\r\n                    <div>{ answer }</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswerComponent;","import React, { useState } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { rootStateType, actionGameExpectation, gameNextMatch, gameSetPrize } from '../../../store/actions';\r\n\r\nimport AnswerComponent from './answer';\r\n\r\nconst AnswersComponent: React.FunctionComponent = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const expectation = useSelector((state: rootStateType) => state.action.expectation);\r\n    const matches = useSelector((state: rootStateType) => state.config.matches);\r\n    const current = useSelector((state: rootStateType) => state.config.current);\r\n    const [action, setAction] = useState({action: 'inactive', id: 0});\r\n    \r\n\r\n    const selectAnswerHandler = (event: any) => {\r\n        if(!expectation) {\r\n            const target = event.target;\r\n            const element = target.closest('div[data-answer]');\r\n    \r\n            if(element) {\r\n                dispatch(actionGameExpectation(true));\r\n\r\n                const id = Number(element.dataset.id);\r\n                const answer = element.dataset.answer;\r\n\r\n                setAction({action: 'selected', id});\r\n\r\n                setTimeout(() => {\r\n                    if(current._correct[0] === answer) {\r\n                        setAction({action: 'correct', id});\r\n\r\n                        setTimeout(() => {\r\n                            if(current.id < matches.length) {\r\n                                setAction({action: 'inactive', id});\r\n                                dispatch(gameNextMatch(current.id));\r\n                            } else if (current.id === matches.length) {\r\n                                dispatch(gameSetPrize('win'));\r\n                                history.push('/gameover');\r\n                            }\r\n\r\n                            dispatch(actionGameExpectation(false));\r\n                        }, 700);\r\n                    }\r\n                    else {\r\n                        setAction({action: 'wrong', id});\r\n\r\n                        setTimeout(() => {\r\n                            dispatch(gameSetPrize('lose'));\r\n                            history.push('/gameover');\r\n                            dispatch(actionGameExpectation(false));\r\n                        }, 700);\r\n                    }\r\n                }, 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={ selectAnswerHandler } className=\"answers\">\r\n            {\r\n                current.answers.map(answer => {\r\n                    return (\r\n                        <AnswerComponent key={ answer.id } answer={ answer.answer } id={ answer.id } action={ action } />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnswersComponent;","import React from 'react';\r\n\r\ntype propsType = {\r\n    prize: string;\r\n    action: string;\r\n}\r\n\r\nconst PrizeComponent: React.FunctionComponent<propsType> = ({ prize, action }) => {\r\n    return (\r\n        <div className=\"prize\">\r\n            <div className={ [\"main\", action].join(' ') } >\r\n                <svg className=\"prize-svg\" width=\"240\" height=\"32\" viewBox=\"0 0 240 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M13.5303 3.70404C15.6719 1.64809 18.5256 0.5 21.4944 0.5H218.506C221.474 0.5 224.328 1.64809 226.47 3.70404L239.278 16L226.47 28.296C224.328 30.3519 221.474 31.5 218.506 31.5H21.4944C18.5256 31.5 15.6719 30.3519 13.5303 28.296L0.721988 16L13.5303 3.70404Z\" />\r\n                </svg>\r\n                <div className=\"left-vector\">\r\n                    <svg width=\"41\" height=\"2\" viewBox=\"0 0 41 2\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M41 1H0\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"right-vector\">\r\n                    <svg width=\"41\" height=\"2\" viewBox=\"0 0 41 2\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M41 1H0\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"text\">{ prize }</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrizeComponent;","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { rootStateType } from '../../../store/actions';\r\n\r\nimport PrizeComponent from './prize';\r\n\r\ntype propsType = {\r\n    onClick: () => void;\r\n    mobile: boolean;\r\n}\r\n\r\nconst MenuComponent: React.FunctionComponent<propsType> = ({ onClick, mobile }) => {\r\n    const matches = useSelector((state: rootStateType) => state.config.matches);\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            {\r\n                mobile &&  <div className=\"close\">\r\n                                    <svg onClick={ onClick } className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M18.364 7.05025C18.7545 6.65972 18.7545 6.02656 18.364 5.63603C17.9734 5.24551 17.3403 5.24551 16.9497 5.63603L12 10.5858L7.05026 5.63606C6.65974 5.24554 6.02657 5.24554 5.63605 5.63606C5.24553 6.02659 5.24553 6.65975 5.63605 7.05028L10.5858 12L5.63603 16.9497C5.24551 17.3403 5.24551 17.9734 5.63603 18.364C6.02656 18.7545 6.65972 18.7545 7.05025 18.364L12 13.4142L16.9498 18.364C17.3403 18.7545 17.9734 18.7545 18.364 18.364C18.7545 17.9735 18.7545 17.3403 18.364 16.9498L13.4142 12L18.364 7.05025Z\" fill=\"#1C1C21\"/>\r\n                                    </svg>\r\n                                </div>\r\n            }\r\n            <div>\r\n                {\r\n                    matches.map(match => {\r\n                        return (\r\n                            <PrizeComponent key={ match.id } prize={ match.prize } action={ match.action } />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuComponent;","import React, { useEffect, useState } from 'react';\r\n\r\nimport {useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MenuIconComponent from '../components/game/menu';\r\nimport QuestionComponent from '../components/game/question';\r\nimport AnswersComponent from '../components/game/answers';\r\nimport MenuComponent from '../components/game/menu/menu';\r\n\r\nimport { gameInitMatch, rootStateType } from '../store/actions';\r\n\r\nconst GamePage: React.FunctionComponent = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const expectation = useSelector((state: rootStateType) => state.action.expectation);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(gameInitMatch());\r\n\r\n        if(window.innerWidth >= 1440) setIsMobile(false);\r\n        else if(window.innerWidth < 1440) setIsMobile(true);\r\n\r\n        const resizeHandler = (event: any) => {\r\n            const target = event.target;\r\n\r\n            if(target.innerWidth >= 1440) setIsMobile(false);\r\n            else if(target.innerWidth < 1440) setIsMobile(true);\r\n        }\r\n\r\n        window.addEventListener('resize', resizeHandler);\r\n\r\n        return function cleanup() {\r\n            window.removeEventListener('resize', resizeHandler);    \r\n        };\r\n        \r\n    }, [dispatch]);\r\n\r\n    const showMenuHandler = () => {\r\n        if(!expectation) {\r\n            setShowMenu(true);\r\n        }\r\n    }\r\n\r\n    const closeMenuHandler = () => {\r\n        setShowMenu(false);\r\n    }\r\n\r\n    if(isMobile) {\r\n        return (\r\n            <main className=\"game\">\r\n                {\r\n                    showMenu ? <MenuComponent onClick={ closeMenuHandler } mobile={ isMobile } /> :  \r\n                        <>\r\n                            <MenuIconComponent onClick={ showMenuHandler } />\r\n                            <QuestionComponent />\r\n                            <AnswersComponent />\r\n                        </>\r\n                }\r\n            </main>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <main className=\"game\">\r\n            <div className=\"question-answers\">\r\n                <QuestionComponent />\r\n                <AnswersComponent />    \r\n            </div>\r\n            <MenuComponent onClick={ closeMenuHandler } mobile={ isMobile } />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default GamePage;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport StartGamePage from './pages/StartGamePage';\r\nimport GameOverPage from './pages/GameOverPage';\r\nimport GamePage from './pages/GamePage';\r\n\r\nconst App: React.FunctionComponent = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                    <Route component={ StartGamePage } path=\"/\" exact />\r\n                    <Route component={ GameOverPage } path=\"/gameover\" />\r\n                    <Route component={ GamePage } path=\"/game\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import config from '../../config/config.json';\r\nimport { GAME_INIT_MATCH, GAME_NEXT_MATCH, GAME_SET_PRIZE } from '../types';\r\n\r\nimport { configStateType, configMatchesType, configItemType, ActionType } from '../actions';\r\n\r\nconst current = {\r\n    question: '',\r\n    answers: [],\r\n    prize: '',\r\n    _correct: [],\r\n    id: 0\r\n}\r\n\r\nconst matches: configMatchesType[] = [];\r\n\r\nconst initialState: configStateType = {\r\n    data: config,\r\n    current,\r\n    matches,\r\n    currentPrize: ''\r\n}\r\n\r\nconst configReducer = (state: configStateType = initialState, action: ActionType) => {\r\n    switch(action.type) {\r\n        case GAME_INIT_MATCH: {\r\n            const current = state.data.data[0];\r\n            const copy: configItemType[] = JSON.parse(JSON.stringify(state.data.data));\r\n\r\n            const matches = copy.reverse().map(item => {\r\n                const action = item.id === 1 ? 'selected' : 'inactive';\r\n\r\n                return { ...item, action }\r\n            });\r\n\r\n            return { ...state, current, matches }\r\n        }\r\n\r\n        case GAME_NEXT_MATCH: {\r\n            const current = state.data.data[action.id];\r\n            const matches = state.matches.map(match => {\r\n                switch(match.id) {\r\n                    case action.id: return { ...match, action: 'disabled' };\r\n                    case (action.id + 1): return { ...match, action: 'selected' };\r\n\r\n                    default: return match;\r\n                }\r\n            })\r\n\r\n            return {...state, current, matches}\r\n        }\r\n\r\n        case GAME_SET_PRIZE: {\r\n            switch(action.action) {\r\n                case 'win': {\r\n                    return { ...state, currentPrize: state.data.data[state.current.id - 1].prize }\r\n                }\r\n                case 'lose': {\r\n                    const current = state.data.data[state.current.id - 2];\r\n                    if(!current) return { ...state, currentPrize: '$0' }\r\n                    \r\n                    return { ...state, currentPrize: current.prize }\r\n                }\r\n\r\n                default: return state;\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default configReducer;","import { ACTION_GAME_EXPECTATION } from '../types';\r\n\r\nimport { actionStateType, ActionType } from '../actions';\r\n\r\n\r\nconst initialState: actionStateType = {\r\n    expectation: false\r\n}\r\n\r\nconst actionReducer = (state: actionStateType = initialState, action: ActionType) => {\r\n    switch(action.type) {\r\n        case ACTION_GAME_EXPECTATION: {\r\n            return {...state, expectation: action.action}\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default actionReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport configReducer from './configReducer';\r\nimport actionReducer from './actionReducer';\r\n\r\nexport default combineReducers({\r\n    config: configReducer,\r\n    action: actionReducer\r\n});","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './scss/main.scss';\r\n\r\nimport App from './App';\r\nimport store from './store/store';\r\n\r\nconst WithProvider = (\r\n    <React.StrictMode>\r\n        <Provider store={ store }>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>\r\n);\r\n\r\nconst millionaire = document.getElementById('millionaire');\r\nReactDOM.render(WithProvider, millionaire);\r\n\r\nreportWebVitals();"],"sourceRoot":""}